Задача 1:
Создайте структуру проекта пакетом src/, виртуальное окружение, файл
.gitignore, разместите TXT-файл в папке data/, сделайте первый коммит.

1. создали directory data
2. создали python package src
3. создали файл .gitignore
запишем туда исключения .idea/
4. делаем первый коммит:
создаем репозиторий git init
проверяем git status
добавляем все файлы в индекс git add .
делаем коммит git commit -m "название коммита"

Задача 2:
Напишите функцию, которая принимает имя файла и возвращает список имен,
содержащихся в файле. Файл содержит имена на разных языках и может содержать
знаки препинания вокруг имен, пустые строки и цифры. Функция должна удалить
знаки препинания и цифры и возвращать только строки, содержащие имя. Сделайте
новый коммит. В отдельном коммите измените TXT-файл, сделав его меньше для простоты тестирования.

1. Создаем файл main.py в папке src
2. Пишем функцию в файле main.py "clear_name"
3. git status
файл  src/main.py будет не закоммитен
4. добавим все что есть в индекс git add .
5. добавляем в коммит git commit -m 'add func for clear names'
6. чтобы изменить txt файл и сделать его меньше нужно:
- скопировать результат запущенной функции (список имен) и заменить в файле.
- git add .
- git commit -m 'update names file'

Задача 3:
Напишите другие функции, позволяющие из списка имен получать только русские и
английские и записывать эти имена в файл в отсортированном виде.
В итоге программа должна считывать данные из исходного файла и формировать два
файла с русскими и английскими именами, отсортированными по алфавиту. Новые файлы
должны создаваться в папке data/. Всегда делайте точечные коммиты.
После завершения разработки сделайте отмену коммита, в котором был урезан исходный файл,
т. е. верните полный TXT-файл.

1. пишем функцию в файле main.py filter_russian_names
2. чтобы проверить только русские имена напишем отдельную функцию
3. git add .
4. git commit -m 'update names file'
